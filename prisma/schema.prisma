// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int  @id @default(autoincrement())
  email String @unique
  username  String
  name  String
  password String
  role UserRoleEnum @default(CUSTOMER)
  created_date DateTime @default(now())
  updated_at DateTime? @updatedAt
  ProductCategoriesCreated ProductCategory[] @relation(name: "product_category_created_user_fk")
  ProductCategoriesUpdated ProductCategory[] @relation(name: "product_category_updated_user_fk")
  ProductsCreated Product[] @relation(name: "product_created_user_fk")
  ProductsUpdated Product[] @relation(name: "product_updated_user_fk")
  ProductVariantsCreated ProductVariant[] @relation(name: "product_variant_created_user_fk")
  ProductVariantsUpdated ProductVariant[] @relation(name: "product_variant_updated_user_fk")
}

enum UserRoleEnum {
  CUSTOMER
  ADMIN
}

model ProductCategory {
  id Int  @id @default(autoincrement())
  name  String
  active  Boolean
  created_user_id Int
  updated_user_id Int
  created_user User @relation(fields: [created_user_id], references: [id], name: "product_category_created_user_fk")
  created_date DateTime @default(now())
  updated_user User @relation(fields: [updated_user_id], references: [id], name: "product_category_updated_user_fk")
  updated_at DateTime? @updatedAt
  products Product[]
}

model Product {
  id Int  @id @default(autoincrement())
  plu  String
  name  String
  active  Boolean
  product_category_id Int
  product_category ProductCategory @relation(fields: [product_category_id], references: [id])
  created_user_id Int
  updated_user_id Int
  created_user User @relation(fields: [created_user_id], references: [id], name: "product_created_user_fk")
  created_date DateTime @default(now())
  updated_user User @relation(fields: [updated_user_id], references: [id], name: "product_updated_user_fk")
  updated_at DateTime? @updatedAt
  product_variants ProductVariant[]
}

model ProductVariant {
  id Int  @id @default(autoincrement())
  product_id Int
  product Product @relation(fields: [product_id], references: [id])
  code String
  name String
  qty Int
  price Int
  active Boolean
  created_user_id Int
  updated_user_id Int
  created_user User @relation(fields: [created_user_id], references: [id], name: "product_variant_created_user_fk")
  created_date DateTime @default(now())
  updated_user User @relation(fields: [updated_user_id], references: [id], name: "product_variant_updated_user_fk")
  updated_at DateTime? @updatedAt
}